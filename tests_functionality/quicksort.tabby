Program quickSort;

Var Arr Int arr[104];
Var Int n, swaps;

Fn Int mod(Int x, Int m) {
    Return x - ((x / m) * m);
}

Fn Int rndInRange(Int l, Int h) 
Var Int tmp, sz; 
{
    sz = h - l + 1;
    tmp = RandInt();
    If(tmp < 0) {
        tmp = tmp * -1;
    }
    Return l + mod(tmp, sz);
}

Fn Void genArr() 
Var Int i;
{
    i = 0;
    For(i < n; i = i + 1) {
        arr[i] = rndInRange(0, 40);
    }
}

Fn Void printArr() 
Var Int i;
{
    i = 0;
    Write("[ ");
    For(i < n - 1; i = i + 1) {
        Write(arr[i], ", ");
    }
    Write(arr[i], " ]\n");
}

Fn Void swap(Int l, Int r) 
Var Int aux;
{
    aux = arr[l];
    arr[l] = arr[r];
    arr[r] = aux;
}

Fn Void quickSortArr(Int l, Int h)
Var Int pivot, lb, i;
 {
    If(l < h) {
        pivot = rndInRange(l, h);
        swap(pivot, l);
        lb = l;
        i = l + 1;
        For(i <= h; i = i + 1) {
            If(arr[i] <= arr[lb]) {
                swap(lb + 1, i);
                lb = lb + 1;
                swap(lb, lb - 1);
                swaps = swaps + 1;
            }
        }
        quickSortArr(l, lb - 1);
        quickSortArr(lb + 1, h);
    }
}

Tabby() {
    Write("\n", "Ingrese N:", "\n");
    Read(n);
    genArr();
    Write("Initial Arr is:\n");
    printArr();
    quickSortArr(0, n - 1);
    Write("Sorted Arr is:\n");
    printArr();
    Write("Used ", swaps, " swaps\n");
}