// Imports 

use std::str::FromStr;

// Grammar 

grammar;

// Regex Terms ( TERMINALS )

pub ID: String = <id:r"[a-z][a-zA-Z]*"> => String::from(id);

pub INT: i32 = <i:r"[+-]?[0-9]+"> => i32::from_str(i).unwrap();

pub FLOAT: f64 =  <f:r"[+-]?[0-9]+\.[0-9]+"> => f64::from_str(f).unwrap();

pub CHAR: char = <c:r"['].[']"> => c.chars().nth(1).unwrap();

pub BOOL : bool = <b:r"True|False"> => if b == "True" { true } else { false };

pub STRINGLIT: String = {
    <s:r#""[^"]*""#> => {
        let mut c = s.chars();
        c.next();
        c.next_back();
        String::from(c.as_str())
    },
}